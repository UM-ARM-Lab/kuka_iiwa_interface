/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package armlab.lcm.msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class cartesian_pose implements lcm.lcm.LCMEncodable
{
    public double xt;
    public double yt;
    public double zt;
    public double wr;
    public double xr;
    public double yr;
    public double zr;
 
    public cartesian_pose()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x907f5fa40101a992L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(armlab.lcm.msgs.cartesian_pose.class))
            return 0L;
 
        classes.add(armlab.lcm.msgs.cartesian_pose.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeDouble(this.xt); 
 
        outs.writeDouble(this.yt); 
 
        outs.writeDouble(this.zt); 
 
        outs.writeDouble(this.wr); 
 
        outs.writeDouble(this.xr); 
 
        outs.writeDouble(this.yr); 
 
        outs.writeDouble(this.zr); 
 
    }
 
    public cartesian_pose(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public cartesian_pose(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static armlab.lcm.msgs.cartesian_pose _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        armlab.lcm.msgs.cartesian_pose o = new armlab.lcm.msgs.cartesian_pose();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.xt = ins.readDouble();
 
        this.yt = ins.readDouble();
 
        this.zt = ins.readDouble();
 
        this.wr = ins.readDouble();
 
        this.xr = ins.readDouble();
 
        this.yr = ins.readDouble();
 
        this.zr = ins.readDouble();
 
    }
 
    public armlab.lcm.msgs.cartesian_pose copy()
    {
        armlab.lcm.msgs.cartesian_pose outobj = new armlab.lcm.msgs.cartesian_pose();
        outobj.xt = this.xt;
 
        outobj.yt = this.yt;
 
        outobj.zt = this.zt;
 
        outobj.wr = this.wr;
 
        outobj.xr = this.xr;
 
        outobj.yr = this.yr;
 
        outobj.zr = this.zr;
 
        return outobj;
    }
 
}

