<launch>
    <arg name="arm_command_gui" default="false"/>
    <arg name="talkative" default="false"/>

    <!-- Allows users to have slightly modified versions of Victor's URDF -->
    <arg name="model" default="$(find victor_description)/urdf/victor.urdf.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>

    <include file="$(find victor_moveit_config)/launch/planning_context.launch">
        <arg name="load_robot_description" value="false"/>
    </include>
    <node pkg="victor_hardware_interface" type="joint_state_publisher.py" name="joint_state_publisher"
          ns="victor"/>
    
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <remap from="/joint_states" to="/victor/joint_states"/>
    </node>
    <node pkg="victor_hardware_interface" type="arm_command_gui.py" name="arm_command_gui" if="$(arg arm_command_gui)"/>

    <node pkg="victor_fake_hardware_interface" type="minimal_fake_arm_interface_node.py" name="fake_arm_interface"
          output="screen"
          ns="victor"/>

    <!--<node pkg="joy"                       type="joy_node"                  name="xbox_joystick"/>-->
    <!--<node pkg="victor_hardware_interface" type="xbox_control.py"           name="xbox_to_victor"/>-->
    <node pkg="victor_hardware_interface" type="arm_wrench_republisher.py" name="arm_wrench_republisher"
          ns="victor"/>
    <!-- <node pkg="victor_hardware_interface" type="grasp_status_node.py" name="grasp_status"/> -->

    <group>
        <machine name="victorbackpack"
                 address="victorbackpack.local"
                 user="armlab"
                 env-loader="~/ros_env.sh"/>
        <node name="polly" pkg="amazon_ros_speech" type="polly.py"
              args="'Yellow leader, standing by. This is a sub par version of Maize'"
              machine="victorbackpack"
              if="$(arg talkative)"/>
    </group>
</launch>

