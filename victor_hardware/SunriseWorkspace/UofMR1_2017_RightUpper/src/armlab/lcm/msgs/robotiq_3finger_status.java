/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package armlab.lcm.msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class robotiq_3finger_status implements lcm.lcm.LCMEncodable
{
    public double timestamp;
    public armlab.lcm.msgs.robotiq_3finger_actuator_status finger_a_status;
    public armlab.lcm.msgs.robotiq_3finger_actuator_status finger_b_status;
    public armlab.lcm.msgs.robotiq_3finger_actuator_status finger_c_status;
    public armlab.lcm.msgs.robotiq_3finger_actuator_status scissor_status;
    public armlab.lcm.msgs.robotiq_3finger_object_status finger_a_object_status;
    public armlab.lcm.msgs.robotiq_3finger_object_status finger_b_object_status;
    public armlab.lcm.msgs.robotiq_3finger_object_status finger_c_object_status;
    public armlab.lcm.msgs.robotiq_3finger_object_status scissor_object_status;
    public byte initialization_status;
    public byte gripper_action_status;
    public byte gripper_system_status;
    public byte gripper_motion_status;
    public byte gripper_fault_status;
 
    public robotiq_3finger_status()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x167393c65a518866L;
 
    public static final byte GRIPPER_RESET = (byte) 0;
    public static final byte GRIPPER_ACTIVATION = (byte) 1;
    public static final byte GRIPPER_STOPPED_OR_BUSY = (byte) 0;
    public static final byte GRIPPER_GOTO = (byte) 1;
    public static final byte GRIPPER_RESET_OR_AUTO_RELEASE = (byte) 0;
    public static final byte GRIPPER_ACTIVATION_IN_PROGRESS = (byte) 1;
    public static final byte GRIPPER_MODE_CHANGE_IN_PROGRESS = (byte) 2;
    public static final byte GRIPPER_ACTIVATION_MODE_CHANGE_COMPLETE = (byte) 3;
    public static final byte GRIPPER_STOPPED_UNKNOWN = (byte) 0;
    public static final byte GRIPPER_IN_MOTION = (byte) 1;
    public static final byte GRIPPER_ONE_OR_TWO_STOPPED_EARLY = (byte) 2;
    public static final byte GRIPPER_ALL_STOPPED_EARLY = (byte) 3;
    public static final byte GRIPPER_ALL_AT_REQUESTED = (byte) 4;
    public static final byte NO_FAULTS = (byte) 0;
    public static final byte PRIORITY_ACTIVATION_MUST_BE_SET = (byte) 9;
    public static final byte PRIORITY_MODE_CHANGE_NEEDED = (byte) 17;
    public static final byte PRIORITY_NEEDS_ACTIVATION = (byte) 25;
    public static final byte MAJOR_ACTIVATION_FAULT = (byte) 10;
    public static final byte MAJOR_CHANGING_MODE_FAULT = (byte) 18;
    public static final byte MAJOR_AUTO_RELEASE_COMPLETE = (byte) 26;
    public static final byte MINOR_COMM_CHIP_NOT_READY = (byte) 12;
    public static final byte MINOR_CHANGING_MODE_FAULT = (byte) 20;
    public static final byte MINOR_AUTO_RELEASE_IN_PROGRESS = (byte) 28;

    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(armlab.lcm.msgs.robotiq_3finger_status.class))
            return 0L;
 
        classes.add(armlab.lcm.msgs.robotiq_3finger_status.class);
        long hash = LCM_FINGERPRINT_BASE
             + armlab.lcm.msgs.robotiq_3finger_actuator_status._hashRecursive(classes)
             + armlab.lcm.msgs.robotiq_3finger_actuator_status._hashRecursive(classes)
             + armlab.lcm.msgs.robotiq_3finger_actuator_status._hashRecursive(classes)
             + armlab.lcm.msgs.robotiq_3finger_actuator_status._hashRecursive(classes)
             + armlab.lcm.msgs.robotiq_3finger_object_status._hashRecursive(classes)
             + armlab.lcm.msgs.robotiq_3finger_object_status._hashRecursive(classes)
             + armlab.lcm.msgs.robotiq_3finger_object_status._hashRecursive(classes)
             + armlab.lcm.msgs.robotiq_3finger_object_status._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeDouble(this.timestamp); 
 
        this.finger_a_status._encodeRecursive(outs); 
 
        this.finger_b_status._encodeRecursive(outs); 
 
        this.finger_c_status._encodeRecursive(outs); 
 
        this.scissor_status._encodeRecursive(outs); 
 
        this.finger_a_object_status._encodeRecursive(outs); 
 
        this.finger_b_object_status._encodeRecursive(outs); 
 
        this.finger_c_object_status._encodeRecursive(outs); 
 
        this.scissor_object_status._encodeRecursive(outs); 
 
        outs.writeByte(this.initialization_status); 
 
        outs.writeByte(this.gripper_action_status); 
 
        outs.writeByte(this.gripper_system_status); 
 
        outs.writeByte(this.gripper_motion_status); 
 
        outs.writeByte(this.gripper_fault_status); 
 
    }
 
    public robotiq_3finger_status(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public robotiq_3finger_status(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static armlab.lcm.msgs.robotiq_3finger_status _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        armlab.lcm.msgs.robotiq_3finger_status o = new armlab.lcm.msgs.robotiq_3finger_status();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.timestamp = ins.readDouble();
 
        this.finger_a_status = armlab.lcm.msgs.robotiq_3finger_actuator_status._decodeRecursiveFactory(ins);
 
        this.finger_b_status = armlab.lcm.msgs.robotiq_3finger_actuator_status._decodeRecursiveFactory(ins);
 
        this.finger_c_status = armlab.lcm.msgs.robotiq_3finger_actuator_status._decodeRecursiveFactory(ins);
 
        this.scissor_status = armlab.lcm.msgs.robotiq_3finger_actuator_status._decodeRecursiveFactory(ins);
 
        this.finger_a_object_status = armlab.lcm.msgs.robotiq_3finger_object_status._decodeRecursiveFactory(ins);
 
        this.finger_b_object_status = armlab.lcm.msgs.robotiq_3finger_object_status._decodeRecursiveFactory(ins);
 
        this.finger_c_object_status = armlab.lcm.msgs.robotiq_3finger_object_status._decodeRecursiveFactory(ins);
 
        this.scissor_object_status = armlab.lcm.msgs.robotiq_3finger_object_status._decodeRecursiveFactory(ins);
 
        this.initialization_status = ins.readByte();
 
        this.gripper_action_status = ins.readByte();
 
        this.gripper_system_status = ins.readByte();
 
        this.gripper_motion_status = ins.readByte();
 
        this.gripper_fault_status = ins.readByte();
 
    }
 
    public armlab.lcm.msgs.robotiq_3finger_status copy()
    {
        armlab.lcm.msgs.robotiq_3finger_status outobj = new armlab.lcm.msgs.robotiq_3finger_status();
        outobj.timestamp = this.timestamp;
 
        outobj.finger_a_status = this.finger_a_status.copy();
 
        outobj.finger_b_status = this.finger_b_status.copy();
 
        outobj.finger_c_status = this.finger_c_status.copy();
 
        outobj.scissor_status = this.scissor_status.copy();
 
        outobj.finger_a_object_status = this.finger_a_object_status.copy();
 
        outobj.finger_b_object_status = this.finger_b_object_status.copy();
 
        outobj.finger_c_object_status = this.finger_c_object_status.copy();
 
        outobj.scissor_object_status = this.scissor_object_status.copy();
 
        outobj.initialization_status = this.initialization_status;
 
        outobj.gripper_action_status = this.gripper_action_status;
 
        outobj.gripper_system_status = this.gripper_system_status;
 
        outobj.gripper_motion_status = this.gripper_motion_status;
 
        outobj.gripper_fault_status = this.gripper_fault_status;
 
        return outobj;
    }
 
}

